blueprint:
  name: Simple Cover Control
  description: Simple cover control - closes only when sun hits windows directly above temperature threshold, when freezing, or when sleeping.
  domain: automation
  input:
    # Temperature Sensors
    outside_temperature_sensor:
      name: Outside temperature sensor
      description: Sensor that provides the outside temperature.
      selector:
        entity:
          filter:
            - domain: sensor

    # Temperature Threshold
    sun_protection_temperature:
      name: Sun protection temperature
      description: Temperature above which covers close when sun hits windows directly.
      default: 25
      selector:
        number:
          min: 15
          max: 40
          unit_of_measurement: "°C"
          mode: box

    # Cover and Window
    room_cover:
      name: Cover
      description: The cover to control.
      selector:
        entity:
          filter:
            - domain: cover

    window_entity:
      name: Window Entity
      description: Window sensor (input_select with Open/Tilted/Closed states).
      selector:
        entity:
          filter:
            - domain: input_select

    window_entity_time:
      name: Window Open Time
      description: Seconds window must be open before triggering cover opening.
      default: 60
      selector:
        number:
          min: 0
          max: 300
          mode: box

    # Weather
    weather_entity:
      name: Weather entity
      description: Weather entity to check current conditions.
      selector:
        entity:
          filter:
            - domain: weather

    # Sun Settings for Direct Light Detection
    sun_hits_window_elevation_min:
      name: Minimum sun elevation for direct window light
      description: Minimum sun elevation when sun can hit your windows directly.
      default: 15
      selector:
        number:
          min: 0
          max: 90
          unit_of_measurement: "°"
          mode: box

    sun_hits_window_elevation_max:
      name: Maximum sun elevation for direct window light
      description: Maximum sun elevation when sun can hit your windows directly.
      default: 65
      selector:
        number:
          min: 0
          max: 90
          unit_of_measurement: "°"
          mode: box

    sun_hits_window_azimuth_min:
      name: Minimum sun azimuth for direct window light
      description: Minimum sun azimuth when sun can hit your south-facing windows (degrees from north).
      default: 120
      selector:
        number:
          min: 0
          max: 360
          unit_of_measurement: "°"
          mode: box

    sun_hits_window_azimuth_max:
      name: Maximum sun azimuth for direct window light
      description: Maximum sun azimuth when sun can hit your south-facing windows (degrees from north).
      default: 240
      selector:
        number:
          min: 0
          max: 360
          unit_of_measurement: "°"
          mode: box

    # Behavioral Settings
    check_sleeping:
      name: Check sleeping mode
      description: Whether to consider sleeping state for closing covers.
      default: true
      selector:
        boolean:

    close_cover_completely:
      name: Close cover completely
      description: Whether to close the cover completely or to a specific position.
      default: true
      selector:
        boolean:

    close_cover_position:
      name: Close cover position
      description: Position to set when not closing completely (0 = fully closed, 100 = fully open).
      default: 10
      selector:
        number:
          min: 0
          max: 100
          unit_of_measurement: "%"
          mode: box

    manual_override_duration:
      name: Manual override duration
      description: Minutes to wait after manual cover operation before automation resumes.
      default: 60
      selector:
        number:
          min: 0
          max: 180
          unit_of_measurement: "minutes"
          mode: box

mode: restart

trigger:
  # Window state changes
  - platform: state
    entity_id: !input window_entity
    id: window_changed

  # Temperature changes
  - platform: numeric_state
    entity_id: !input outside_temperature_sensor
    above: -50
    below: 50
    id: temperature_changed

  # Sun position changes
  - platform: numeric_state
    entity_id: sun.sun
    attribute: elevation
    above: -90
    below: 90
    id: sun_elevation_changed

  - platform: numeric_state
    entity_id: sun.sun
    attribute: azimuth
    above: 0
    below: 360
    id: sun_azimuth_changed

  # Sleeping state changes
  - platform: state
    entity_id: input_boolean.sleeping
    id: sleeping_changed

  # Weather changes
  - platform: state
    entity_id: !input weather_entity
    id: weather_changed

condition:
  # Don't act if manual override is active
  - condition: template
    value_template: >-
      {{ (now() - states[room_cover].last_changed).total_seconds() > (manual_override_duration * 60) }}

action:
  - choose:
      # CLOSE COVER CONDITIONS
      - conditions:
          - condition: template
            value_template: >-
              {{ state_attr(room_cover, 'current_position') | int(100) > 0 }}
          - condition: or
            conditions:
              # Close when sleeping (unless window is open)
              - condition: and
                conditions:
                  - condition: template
                    value_template: >-
                      {{ check_sleeping and is_state('input_boolean.sleeping', 'on') }}
                  - condition: template
                    value_template: >-
                      {{ states(window_entity) != 'Open' }}

              # Close when freezing
              - condition: template
                value_template: >-
                  {{ states(outside_temperature_sensor) | float(0) < 0 }}

              # Close when sun hits windows and it's too hot
              - condition: and
                conditions:
                  - condition: template
                    value_template: >-
                      {{ states(window_entity) != 'Open' }}
                  - condition: template
                    value_template: >-
                      {{ states(outside_temperature_sensor) | float(0) > sun_protection_temperature }}
                  - condition: template
                    value_template: >-
                      {{ states(weather_entity) in ['sunny', 'partlycloudy', 'cloudy'] }}
                  - condition: template
                    value_template: >-
                      {{ state_attr('sun.sun', 'elevation') | float(0) >= sun_hits_window_elevation_min and 
                         state_attr('sun.sun', 'elevation') | float(0) <= sun_hits_window_elevation_max and
                         state_attr('sun.sun', 'azimuth') | float(0) >= sun_hits_window_azimuth_min and 
                         state_attr('sun.sun', 'azimuth') | float(0) <= sun_hits_window_azimuth_max }}

        sequence:
          - choose:
              # Close completely
              - conditions:
                  - condition: template
                    value_template: "{{ close_cover_completely }}"
                sequence:
                  - service: cover.close_cover
                    target:
                      entity_id: !input room_cover

              # Close to specific position
              - conditions:
                  - condition: template
                    value_template: "{{ not close_cover_completely }}"
                sequence:
                  - service: cover.set_cover_position
                    target:
                      entity_id: !input room_cover
                    data:
                      position: !input close_cover_position

        alias: "Close Cover"

      # OPEN COVER CONDITIONS (all other times)
      - conditions:
          - condition: template
            value_template: >-
              {{ state_attr(room_cover, 'current_position') | int(0) < 100 }}
          - condition: or
            conditions:
              # Always open when window is open
              - condition: state
                entity_id: !input window_entity
                state: "Open"
                for:
                  seconds: !input window_entity_time

              # Open when none of the closing conditions are met
              - condition: and
                conditions:
                  - condition: template
                    value_template: >-
                      {{ not check_sleeping or not is_state('input_boolean.sleeping', 'on') or states(window_entity) == 'Open' }}
                  - condition: template
                    value_template: >-
                      {{ states(outside_temperature_sensor) | float(0) >= 0 }}
                  - condition: template
                    value_template: >-
                      {{ not (states(outside_temperature_sensor) | float(0) > sun_protection_temperature and
                             states(weather_entity) in ['sunny', 'partlycloudy', 'cloudy'] and
                             state_attr('sun.sun', 'elevation') | float(0) >= sun_hits_window_elevation_min and 
                             state_attr('sun.sun', 'elevation') | float(0) <= sun_hits_window_elevation_max and
                             state_attr('sun.sun', 'azimuth') | float(0) >= sun_hits_window_azimuth_min and 
                             state_attr('sun.sun', 'azimuth') | float(0) <= sun_hits_window_azimuth_max) }}

        sequence:
          - service: cover.open_cover
            target:
              entity_id: !input room_cover

        alias: "Open Cover"