blueprint:
  name: Simple Cover Control
  description: Simple cover control - closes only when sun hits windows directly above temperature threshold, when freezing, or when sleeping.
  domain: automation
  input:
    # Temperature Sensors
    outside_temperature_sensor:
      name: Outside temperature sensor
      description: Sensor that provides the outside temperature.
      selector:
        entity:
          filter:
            - domain: sensor

    # Temperature Threshold
    sun_protection_temperature:
      name: Sun protection temperature
      description: Temperature above which covers close when sun hits windows directly.
      default: 25
      selector:
        number:
          min: 15
          max: 40
          unit_of_measurement: "°C"
          mode: box

    # Cover and Window
    room_cover:
      name: Cover
      description: The cover to control.
      selector:
        entity:
          filter:
            - domain: cover

    window_entity:
      name: Window Entity
      description: Window sensor (input_select with Open/Tilted/Closed states).
      selector:
        entity:
          filter:
            - domain: input_select

    window_entity_time:
      name: Window Open Time
      description: Seconds window must be open before triggering cover opening.
      default: 60
      selector:
        number:
          min: 0
          max: 300
          mode: box

    # Weather
    weather_entity:
      name: Weather entity
      description: Weather entity to check current conditions.
      selector:
        entity:
          filter:
            - domain: weather

    # Sun Settings for Direct Light Detection
    sun_hits_window_elevation_min:
      name: Minimum sun elevation for direct window light
      description: Minimum sun elevation when sun can hit your windows directly.
      default: 15
      selector:
        number:
          min: 0
          max: 90
          unit_of_measurement: "°"
          mode: box

    sun_hits_window_elevation_max:
      name: Maximum sun elevation for direct window light
      description: Maximum sun elevation when sun can hit your windows directly.
      default: 65
      selector:
        number:
          min: 0
          max: 90
          unit_of_measurement: "°"
          mode: box

    sun_hits_window_azimuth_min:
      name: Minimum sun azimuth for direct window light
      description: Minimum sun azimuth when sun can hit your south-facing windows (degrees from north).
      default: 120
      selector:
        number:
          min: 0
          max: 360
          unit_of_measurement: "°"
          mode: box

    sun_hits_window_azimuth_max:
      name: Maximum sun azimuth for direct window light
      description: Maximum sun azimuth when sun can hit your south-facing windows (degrees from north).
      default: 240
      selector:
        number:
          min: 0
          max: 360
          unit_of_measurement: "°"
          mode: box

    # Behavioral Settings
    check_sleeping:
      name: Check sleeping mode
      description: Whether to consider sleeping state for closing covers.
      default: true
      selector:
        boolean:

    manual_override_duration:
      name: Manual override duration
      description: Minutes to wait after manual cover operation before automation resumes.
      default: 60
      selector:
        number:
          min: 0
          max: 180
          unit_of_measurement: "minutes"
          mode: box

    position_tolerance:
      name: Position tolerance
      description: Don't move cover if within this many percent of target position.
      default: 5
      selector:
        number:
          min: 1
          max: 20
          mode: box

    # Additional Conditions and Triggers
    additional_conditions:
      name: Additional conditions
      description: Additional conditions that must be met.
      default:
        - condition: template
          value_template: "{{ true }}"
      selector:
        condition:

    additional_triggers:
      name: Additional triggers
      description: Additional triggers for the automation.
      default: []
      selector:
        trigger:

mode: restart

variables:
  # Current states
  current_position: "{{ state_attr(room_cover, 'current_position') | int(0) }}"
  outside_temp: "{{ states(outside_temperature_sensor) | float(0) }}"
  weather_state: "{{ states(weather_entity) }}"
  window_state: "{{ states(window_entity) }}"

  # Sun position
  sun_elevation: "{{ state_attr('sun.sun', 'elevation') | float(0) }}"
  sun_azimuth: "{{ state_attr('sun.sun', 'azimuth') | float(0) }}"

  # Check if sun is hitting windows directly
  sun_hits_windows: >
    {{ sun_elevation >= sun_hits_window_elevation_min and 
       sun_elevation <= sun_hits_window_elevation_max and
       sun_azimuth >= sun_hits_window_azimuth_min and 
       sun_azimuth <= sun_hits_window_azimuth_max }}

  # Conditions for closing covers
  is_sleeping: "{{ is_state('input_boolean.sleeping', 'on') if check_sleeping else false }}"
  is_freezing: "{{ outside_temp < 0 }}"
  is_too_hot_with_sun: "{{ sun_hits_windows and outside_temp > sun_protection_temperature }}"

  # Manual override check
  last_changed: "{{ (now() - states[room_cover].last_changed).total_seconds() }}"
  manual_override_active: "{{ last_changed < (manual_override_duration * 60) }}"

triggers:
  # Window state changes
  - trigger: state
    entity_id: !input window_entity
    id: window_changed

  # Temperature changes
  - trigger: numeric_state
    entity_id: !input outside_temperature_sensor
    id: temperature_changed

  # Sun position changes (every 30 minutes during day)
  - trigger: numeric_state
    entity_id: sun.sun
    attribute: elevation
    id: sun_elevation_changed

  - trigger: numeric_state
    entity_id: sun.sun
    attribute: azimuth
    id: sun_azimuth_changed

  # Weather changes
  - trigger: state
    entity_id: !input weather_entity
    id: weather_changed

  # Sleeping state changes
  - trigger: state
    entity_id: input_boolean.sleeping
    id: sleeping_changed

  # Additional triggers
  - triggers: !input additional_triggers

conditions:
  # Don't act if manual override is active
  - condition: template
    value_template: "{{ not manual_override_active }}"
  # Additional user conditions
  - condition: and
    conditions: !input additional_conditions

actions:
  - choose:
      # CLOSE COVER CONDITIONS
      - conditions:
          - condition: template
            value_template: "{{ current_position > 0 }}"
          - condition: or
            conditions:
              # Close when sleeping (unless window is open)
              - condition: and
                conditions:
                  - condition: template
                    value_template: "{{ is_sleeping }}"
                  - condition: template
                    value_template: "{{ window_state != 'Open' }}"
              # Close when freezing
              - condition: template
                value_template: "{{ is_freezing }}"
              # Close when sun hits windows and it's too hot
              - condition: and
                conditions:
                  - condition: template
                    value_template: "{{ is_too_hot_with_sun }}"
                  - condition: template
                    value_template: "{{ window_state != 'Open' }}"

        sequence:
          - condition: template
            value_template: "{{ current_position > position_tolerance }}"
          - action: cover.close_cover
            target:
              entity_id: !input room_cover
        alias: "Close Cover"

      # OPEN COVER CONDITIONS (all other times)
      - conditions:
          - condition: template
            value_template: "{{ current_position < 100 }}"
          - condition: or
            conditions:
              # Always open when window is open
              - condition: state
                entity_id: !input window_entity
                state: "Open"
                for:
                  seconds: !input window_entity_time

              # Open when none of the closing conditions are met
              - condition: and
                conditions:
                  - condition: template
                    value_template: "{{ not is_sleeping or window_state == 'Open' }}"
                  - condition: template
                    value_template: "{{ not is_freezing }}"
                  - condition: template
                    value_template: "{{ not is_too_hot_with_sun }}"
        sequence:
          - condition: template
            value_template: "{{ (100 - current_position) > position_tolerance }}"

          - action: cover.open_cover
            target:
              entity_id: !input room_cover
        alias: "Open Cover"